1、查看服务器磁盘
[root@localhost ~]# fdisk -l
Disk /dev/sda: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x00000cd2

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     1026047      512000   83  Linux
/dev/sda2         1026048     5220351     2097152   82  Linux swap / Solaris
/dev/sda3         5220352    41943039    18361344   83  Linux

Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
可以查看到新的磁盘/dev/sdb

2、对数据盘进行分区
[root@localhost ~]# fdisk /dev/sdb
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x74699468.

Command (m for help): n   //新建一个分区
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p   //选择主分区号。回车，默认主分区号为1
Partition number (1-4, default 1):    //回车，默认1柱面开始分区
First sector (2048-41943039, default 2048):    //回车，默认所有磁盘分一个区
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-41943039, default 41943039): 
Using default value 41943039
Partition 1 of type Linux and of size 20 GiB is set

Command (m for help): p   //查看刚才的分区

Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x74699468

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    41943039    20970496   83  Linux   //新建一个分区完成

Command (m for help): w   //保存分区设置
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.

3、格式化新建的分区
[root@localhost ~]# mkfs.ext4 /dev/sdb1   //可自主决定选用其它文件格式，如ext3、xfs等
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
1310720 inodes, 5242624 blocks
262131 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=2153775104
160 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
	4096000

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done

4、创建挂载目录，挂载新分区
[root@localhost ~]# mkdir /data   //创建挂载目录data（可自定义）
[root@localhost ~]# mount /dev/sdb1 /data/   //将新分区sdb1挂载到data目录下
[root@localhost ~]# cd /data
[root@localhost data]# ls   //查看到lost+found 表示挂载成功（xfs没有此显示）
lost+found
[root@localhost data]# df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        476M     0  476M   0% /dev
tmpfs           487M     0  487M   0% /dev/shm
tmpfs           487M  7.6M  479M   2% /run
tmpfs           487M     0  487M   0% /sys/fs/cgroup
/dev/sda3        18G  1.2G   17G   7% /
/dev/sda1       497M  124M  374M  25% /boot
tmpfs            98M     0   98M   0% /run/user/0
/dev/sdb1        20G   45M   19G   1% /data   //新挂载的磁盘

5、写入硬盘启动信息
磁盘挂载后重启服务器挂载就会失效，因此我们需要写入硬盘启动信息，下次重启后自动挂载数据盘。
[root@localhost data]# echo "/dev/sdb1 /data ext4 defaults 0 0" >> /etc/fstab
[root@localhost data]# cat /etc/fstab

#
# /etc/fstab
# Created by anaconda on Tue Jun  2 22:31:33 2020
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
UUID=6db12e5c-b295-46b9-a4bb-db8993ff92a2 /                       xfs     defaults        0 0
UUID=ab2920d8-4334-4dd9-91db-989cc2e090f3 /boot                   xfs     defaults        0 0
UUID=c106a1ad-fec0-4cfd-81c8-78e09ee230b9 swap                    swap    defaults        0 0
/dev/sdb1 /data ext4 defaults 0 0   //写入成功
